
"""Matrix Challenge
Have the function MatrixChallenge(strArr) read strArr which will be an array of integers represented as strings. 
Within the array there will also be "<>" elements which represent break points.
The array will make up a matrix where the (number of break points + 1) represents the number of rows. 
Here is an example of how strArr may look: ["1","0","1","<>","0","1","0","<>","1","0","1"]. 
There are two "<>", so 2 + 1 = 3. Therefore there will be three rows in the array and the contents will be row1=[1 0 1], row2=[0 1 0] and row3=[1 0 1].
Your program should take the given array of elements, create the proper matrix, and then determine whether the matrix is symmetric, in other words, if matrix M is equal to M transpose.
If it is, return the string symmetric and if it isn't return the string not symmetric.
A matrix may or may not be a square matrix and if this is the case you should return the string not possible.
For the example above, your program should return symmetric.
"""







def MatrixChallenge(strArr):
"This function takes in a string list, creates a matrix and checks if matrix is symmetrical "
  import numpy as np

  #Number of rows
  indicator = "<>"
  rows = sum(s.count(indicator) for s in strArr)
  rows = rows + 1

  #Creating Matrix
  while indicator in strArr: strArr.remove(indicator)
  strArr = [int(i) for i in strArr]

  strArr = [strArr[i:i + rows] for i in range(0, len(strArr), rows)]
  strArr = np.array(strArr)

  #Check if matrix is symmetric
  if np.allclose(strArr, strArr.T) == True : 
    output = "symmetric"
  else:
    output = "not symmetric"
  
  return output

